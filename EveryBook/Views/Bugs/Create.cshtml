@model EveryBook.Models.Bug

@using Microsoft.AspNetCore.Identity

@inject SignInManager<ExtendUser> SignInManager

@{
    ViewData["Title"] = "Create";
}

<h1>Report New Bug</h1>
<hr />

@if (!(SignInManager.IsSignedIn(User)))
{
    <h1 class="text-danger">You must be signed in to report a new Bug</h1>
}

<div class="row">
    <div class="col-md-8">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="col-md-4 form-group">
                <span asp-validation-for="Title" class="text-danger"></span>
                <br />
                <p><em>Title</em></p>
                <input asp-for="Title" class="form-control" />
            </div>
            <div class="col-md-8 form-group">
                <span asp-validation-for="Description" class="text-danger"></span>
                <br />
                <p><em>Name</em></p>
                <textarea asp-for="Description" class="form-control" id="Description" rows="3"></textarea>
            </div>
            <!--
                 <div class="form-group">
                    <label asp-for="ExtendUserId" class="control-label"></label>
                    <select asp-for="ExtendUserId" class ="form-control" asp-items="ViewBag.ExtendUserId"></select>
                </div>
            -->
            <div class="col-md-8 form-group">
                @if (SignInManager.IsSignedIn(User))
                {
                    <input type="submit" value="Create" class="btn btn-outline-primary" />
                }
                else
                {
                    <input type="submit" value="Create" class="btn btn-outline-primary" disabled />
                }
            </div>
        </form>
    </div>
</div>
<!--
<div>
    <a asp-action="Index">Back to List</a>
</div>
-->
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
